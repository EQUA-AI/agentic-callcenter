name: Azure Deployment

on:
  workflow_dispatch:
  # Run the workflow on commit to main branch
  push:
    # Run when commits are pushed to mainline branch
    # Set this to the mainline branch you are using
    branches:
      - main

  # Using federated credentials (user-assigned managed identity) authentication
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    # azd build-in secrets for federated authentication
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
      # OpenAI configuration
      OPENAI_NAME: ${{ secrets.OPENAI_NAME }}
      OPENAI_RESOURCE_GROUP_NAME: ${{ secrets.OPENAI_RESOURCE_GROUP_NAME }}
      EMAIL_RECIPIENT_ADDRESS: ${{ secrets.EMAIL_RECIPIENT_ADDRESS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # using the install-azd action
      - name: Install azd
        uses: Azure/setup-azd@v2.1.0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      # Login with federated credentials (managed identity)
      - name: Log in with Azure (Federated Credentials)
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Configure azd to use federated credentials from GitHub Actions
      - name: Configure azd for federated credentials
        run: |
          azd config set auth.useAzCliAuth true
        shell: bash

      # Create .env file for azd parameters
      - name: Create .env file for azd
        run: |
          cat > .env << EOF
          AZURE_ENV_NAME=${{ secrets.AZURE_ENV_NAME }}
          AZURE_LOCATION=${{ secrets.AZURE_LOCATION }}
          AZURE_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_PRINCIPAL_ID=${{ secrets.AZURE_PRINCIPAL_ID }}
          AZURE_OPENAI_NAME=${{ secrets.OPENAI_NAME }}
          AZURE_OPENAI_RG=${{ secrets.OPENAI_RESOURCE_GROUP_NAME }}
          EMAIL_RECIPIENT_ADDRESS=${{ secrets.EMAIL_RECIPIENT_ADDRESS }}
          GITHUB_ACTIONS=true
          EOF
        shell: bash

      - name: Provision Infrastructure and Deploy Application
        run: azd up --no-prompt
        shell: bash
        env:
          # Azure credentials for azd to use
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          # Infrastructure parameters matching main.parameters.json
          AZURE_ENV_NAME: ${{ secrets.AZURE_ENV_NAME }}
          AZURE_LOCATION: ${{ secrets.AZURE_LOCATION }}
          AZURE_PRINCIPAL_ID: ${{ secrets.AZURE_PRINCIPAL_ID }}
          AZURE_OPENAI_NAME: ${{ secrets.OPENAI_NAME }}
          AZURE_OPENAI_RG: ${{ secrets.OPENAI_RESOURCE_GROUP_NAME }}
          EMAIL_RECIPIENT_ADDRESS: ${{ secrets.EMAIL_RECIPIENT_ADDRESS }}
          GITHUB_ACTIONS: "true"
          # Enable OIDC authentication for azd
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}
          # uncomment this if you are using infrastructure parameters
          AZD_INITIAL_ENVIRONMENT_CONFIG: ${{ secrets.AZD_INITIAL_ENVIRONMENT_CONFIG }}
